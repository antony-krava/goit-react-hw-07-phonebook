{"version":3,"sources":["components/Filter/Filter.module.css","App.module.css","redux/contact/contact-action.js","redux/contact/contact-types.js","redux/contact/contact-operations.js","redux/contact/contact-reducer.js","redux/store.js","components/ContactForm/ContactForm.jsx","redux/contact/contact-selectors.js","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","chengeFilter","axios","defaults","baseURL","dispatch","a","get","data","contactForm","contact","name","number","post","then","catch","error","id","delete","items","createReducer","_","payload","state","find","alert","filter","loading","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","contacts","contactReduser","devTools","process","ContactForm","handleChenge","event","currentTarget","value","setState","reset","hendleSubmit","preventDefault","props","addContacts","this","className","styles","onSubmit","label","input","onChange","type","pattern","title","required","labelNumber","button","Component","connect","contactOperations","getLoading","getFilter","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","includes","onHandlerChenge","deleteContacts","list","map","item","textName","textNamber","onClick","App","fetchContacts","container","isLoadingContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.25423215.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Filter_title__1D4zj\",\"input\":\"Filter_input__3KVSJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2tqB_\"};","import types from './contact-types';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction(\r\n  'contacts/deleteContactRequest',\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  'contacts/deleteContactSuccess',\r\n);\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const chengeFilter = createAction(types.CHENGE_FILTER);","export default {\r\n  ADD: 'Contact/addition',\r\n  DELETE: 'Contact/deletion',\r\n  CHENGE_FILTER: 'Contact/filter',\r\n};","import axios from 'axios';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from './contact-action';\r\n\r\naxios.defaults.baseURL = 'http://localhost:4040';\r\n\r\nconst fetchContact = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nconst addContacts = contactForm => dispatch => {\r\n  const contact = {\r\n    name: contactForm.name,\r\n    number: contactForm.number,\r\n  };\r\n  dispatch(addContactRequest());\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContacts = id => dispatch => {\r\n  dispatch(deleteContactRequest());\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default { fetchContact, addContacts, deleteContacts };","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  fetchContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  chengeFilter,\r\n} from './contact-action';\r\n\r\nconst items = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) =>\r\n    state.find(({ name }) => name === payload.name)\r\n      ? alert(`${state.name} is already in contacts`)\r\n      : [payload, ...state],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [chengeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport { contactReduser } from './contact';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactReduser,\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default store;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactOperations } from '../../redux/contact';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChenge = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  hendleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.addContacts(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form className={styles.contactForm} onSubmit={this.hendleSubmit}>\r\n        <label className={styles.label}>Name</label>\r\n        <input\r\n          className={styles.input}\r\n          value={name}\r\n          onChange={this.handleChenge}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n        <label className={styles.labelNumber}>Number</label>\r\n        <input\r\n          className={styles.input}\r\n          value={number}\r\n          onChange={this.handleChenge}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n        <button type=\"submit\" className={styles.button}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContacts: contactForm => dispatch(contactOperations.addContacts(contactForm)),\r\n});\r\nexport default connect(null, mapDispatchToProps)(ContactForm);","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getLoading = state => state.contacts.loading;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getAllContacts = state => state.contacts.items;\r\nexport const getVisibleContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (allContacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  },\r\n);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { chengeFilter } from '../../redux/contact/contact-action';\r\nimport { getFilter } from '../../redux/contact/contact-selectors';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onHandlerChenge }) => {\r\n  return (\r\n    <div>\r\n      <h3 className={styles.title}>Find contact by name</h3>\r\n      <input\r\n        type=\"text\"\r\n        className={styles.input}\r\n        name=\"filter\"\r\n        value={filter}\r\n        onChange={onHandlerChenge}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string,\r\n  onHandleChenge: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  filter: getFilter(state),\r\n});\r\nconst mapDispatchToProps = dispatch => ({\r\n  onHandlerChenge: event =>\r\n    dispatch(chengeFilter(event.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { contactOperations } from '../../redux/contact';\r\nimport { getVisibleContacts } from '../../redux/contact/contact-selectors';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, deleteContacts }) => {\r\n  return (\r\n    <ul className={styles.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id} className={styles.item}>\r\n          <span className={styles.textName}>{name}:</span>\r\n          <span className={styles.textNamber}>{number}</span>\r\n          <button\r\n            type=\"button\"\r\n            className={styles.button}\r\n            onClick={() => deleteContacts(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    }),\r\n  ),\r\n  deleteContacts: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContacts: id => dispatch(contactOperations.deleteContacts(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport contactOperations from './redux/contact/contact-operations';\nimport { getLoading } from './redux/contact/contact-selectors';\nimport styles from './App.module.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {this.props.isLoadingContacts && <h1>Loading...</h1>}\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n isLoadingContacts: getLoading(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  fetchContacts: () => dispatch(contactOperations.fetchContact()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store.store}> */}\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__3t3bQ\",\"label\":\"ContactForm_label__1E7it\",\"input\":\"ContactForm_input__1RoB5\",\"button\":\"ContactForm_button__2xDgs\",\"labelNumber\":\"ContactForm_labelNumber__U9sYk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__CPLJb\",\"item\":\"ContactList_item__KTT4I\",\"textName\":\"ContactList_textName__13TvX\",\"textNumber\":\"ContactList_textNumber__1Liw9\",\"button\":\"ContactList_button__1jscY\"};"],"sourceRoot":""}